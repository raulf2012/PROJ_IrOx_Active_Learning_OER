#!/bin/bash
#SBATCH -q premium 
##SBATCH -p regular
##SBATCH -q debug 
##SBATCH -t 20:00:00 
##SBATCH -t 40:00:00 
#SBATCH -t 00:30:00 
##SBATCH -t 4:00:00
#SBATCH -N 5  # 24 cpus per node on edison, 32 per node on cori haswell, 50? on knl
#SBATCH -A jcap #or use m2416 or Samira's repo
##SBATCH -A m2997 #or use m2416 or Samira's repo
#SBATCH -e error.txt
#SBATCH -o output.txt
##SBATCH --qos=scavenger #cost nothing
##SBATCH --qos=premium #costs 2xmore
##SBATCH -C haswell #this is for cori haswell (old)
#SBATCH -C knl #new cori 
#SBATCH --tasks-per-node=66
## 24 cores (edison) 32 cpus (cori)

#module load python/2.7-anaconda-4.4
module load python/3.7-anaconda-2019.07
#export PYTHONPATH=$HOME/.local/cori/2.7-anaconda-4.4/lib/python2.7/site-packages:/project/projectdirs/m2997/ase-espresso/lib/python2.7/site-packages:$PYTHONPATH
export PYTHONPATH=$HOME/.local/cori//3.7-anaconda-2019.07/lib/python3.7/site-packages:$PYTHONPATH

echo $PYTHONPATH

module load  vasp-tpc/5.4.4-knl

cd $SLURM_SUBMIT_DIR
export TMPDIR=$SLURM_SUBMIT_DIR

export PATH=/project/projectdirs/m2997/espresso/espresso_gnu_cori/bin:$PATH
echo $PATH
echo $TMPDIR

export VASP_SCRIPT=./run_vasp.py
export VASP_PP_PATH=/project/projectdirs/m2997/vasp-psp/pseudo52


#OpenMP settings:
export OMP_NUM_THREADS=1
export OMP_PLACES=threads
export OMP_PROC_BIND=spread



echo "import os" > run_vasp.py
#echo "exitcode = os.system('srun -n 660 -c 4 --cpu_bind=cores vasp_std')" >> run_vasp.py #on cori
echo "exitcode = os.system('srun -n 330 -c 4 --cpu_bind=cores vasp_std')" >> run_vasp.py #on cori

echo $VASP_SCRIPT
echo $VASP_PP_PATH

python ./run3.py
